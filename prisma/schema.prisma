generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
	directUrl = env("DIRECT_URL")
}

model User {
	id              String   @id @default(cuid())
	email           String   @unique
	name            String?
	passwordHash    String?
	stripeCustomerId String?
	premium         Boolean  @default(false)
	createdAt       DateTime @default(now())
	updatedAt       DateTime @updatedAt
	stories         Story[]
	ratings         Rating[]
	subscriptions   Subscription[]
	sessions        Session[]
}

model Story {
	id        String   @id @default(cuid())
	title     String
	excerpt   String
	content   String
	author    String
	genre     String
	length    String
	readTime  Int
	tags      String[]
	views     Int      @default(0)
	likes     Int      @default(0)
	isPremium Boolean  @default(false)
	published Boolean  @default(false)
	priceCents Int?    @default(0)
	currency  String?  @default("USD")
	coverImageUrl String?
	listedAt  DateTime?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	user      User?    @relation(fields: [userId], references: [id])
	userId    String?
	ratings   Rating[]
	listing   Listing?
}

model Rating {
	id        String   @id @default(cuid())
	score     Int
	user      User     @relation(fields: [userId], references: [id])
	userId    String
	story     Story    @relation(fields: [storyId], references: [id])
	storyId   String
	createdAt DateTime @default(now())

	@@unique([userId, storyId])
}

model Subscription {
	id         String   @id @default(cuid())
	status     String
	plan       String
	user       User     @relation(fields: [userId], references: [id])
	userId     String
	createdAt  DateTime @default(now())
	updatedAt  DateTime @updatedAt
	stripeSubId String?
}

model Session {
	id         String   @id @default(cuid())
	user       User     @relation(fields: [userId], references: [id])
	userId     String
	sessionId  String   @unique
	modelName  String?
	createdAt  DateTime @default(now())
	updatedAt  DateTime @updatedAt
}

model Listing {
	id         String   @id @default(cuid())
	story      Story    @relation(fields: [storyId], references: [id])
	storyId    String   @unique
	priceCents Int
	status     String   @default("active")
	createdAt  DateTime @default(now())
	updatedAt  DateTime @updatedAt
}
