#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ StoryFlow Production Setup\n');

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
const requiredFiles = [
  'package.json',
  'prisma/schema.prisma',
  'lib/auth.ts',
  'lib/stripe.ts'
];

console.log('üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤...');
for (const file of requiredFiles) {
  if (!fs.existsSync(file)) {
    console.error(`‚ùå –§–∞–π–ª ${file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    process.exit(1);
  }
}
console.log('‚úÖ –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ñ–∞–π–ª–∏ –∑–Ω–∞–π–¥–µ–Ω–æ\n');

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è JWT —Å–µ–∫—Ä–µ—Ç—É
console.log('üîê –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è JWT —Å–µ–∫—Ä–µ—Ç—É...');
const jwtSecret = require('crypto').randomBytes(64).toString('hex');
console.log(`JWT_SECRET=${jwtSecret}\n`);

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Prisma
console.log('üóÑÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Prisma...');
try {
  execSync('npx prisma generate', { stdio: 'inherit' });
  console.log('‚úÖ Prisma Client –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ');
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó Prisma Client');
  process.exit(1);
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env.example —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
if (!fs.existsSync('env.example')) {
  console.log('üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è env.example...');
  const envExample = `# Database Configuration
DATABASE_URL="postgresql://username:password@localhost:5432/storyflow"
DIRECT_URL="postgresql://username:password@localhost:5432/storyflow"

# JWT Configuration
JWT_SECRET="${jwtSecret}"

# Stripe Configuration
STRIPE_SECRET_KEY="sk_test_your_stripe_secret_key"
STRIPE_WEBHOOK_SECRET="whsec_your_webhook_secret"
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_your_stripe_publishable_key"

# Stripe Price IDs (create these in your Stripe dashboard)
STRIPE_PRICE_ID="price_your_premium_plan_price_id"

# Site Configuration
NEXT_PUBLIC_SITE_URL="http://localhost:3000"

# AI Server (optional - for external AI generation)
AI_SERVER_URL="http://localhost:8000"

# Development
NODE_ENV="development"
`;
  fs.writeFileSync('env.example', envExample);
  console.log('‚úÖ env.example —Å—Ç–≤–æ—Ä–µ–Ω–æ');
}

console.log('\nüéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n');

console.log('üìã –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:');
console.log('1. –°—Ç–≤–æ—Ä—ñ—Ç—å –±–∞–∑—É –¥–∞–Ω–∏—Ö –Ω–∞ Neon: https://neon.tech');
console.log('2. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ Stripe: https://dashboard.stripe.com/');
console.log('3. –î–æ–¥–∞–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ Vercel');
console.log('4. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –º—ñ–≥—Ä–∞—Ü—ñ—ó: npm run prisma:migrate:deploy');
console.log('5. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ health check: /api/health\n');

console.log('üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è:');
console.log('- VERCEL_SETUP.md - –¥–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è');
console.log('- SETUP_BACKEND.md - –∑–∞–≥–∞–ª—å–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è');
console.log('- env.example - –ø—Ä–∏–∫–ª–∞–¥ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞\n');

console.log('üîó –ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:');
console.log('- Neon Database: https://neon.tech');
console.log('- Stripe Dashboard: https://dashboard.stripe.com/');
console.log('- Vercel Dashboard: https://vercel.com/dashboard');
console.log('- Prisma Studio: npx prisma studio');
