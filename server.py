#!/usr/bin/env python3
"""
StoryFlow - –õ–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
–ü—ñ–¥—Ç—Ä–∏–º—É—î CORS —Ç–∞ —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏
"""

import http.server
import socketserver
import os
import sys
from urllib.parse import urlparse

class CORSRequestHandler(http.server.SimpleHTTPRequestHandler):
    """HTTP Request Handler –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é CORS"""
    
    def end_headers(self):
        """–î–æ–¥–∞—î CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ"""
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type, Authorization')
        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', '0')
        super().end_headers()
    
    def do_OPTIONS(self):
        """–û–±—Ä–æ–±–∫–∞ preflight –∑–∞–ø–∏—Ç—ñ–≤"""
        self.send_response(200)
        self.end_headers()
    
    def do_GET(self):
        """–û–±—Ä–æ–±–∫–∞ GET –∑–∞–ø–∏—Ç—ñ–≤"""
        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
        print(f"[GET] {self.client_address[0]} - {self.path}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ API –∑–∞–ø–∏—Ç–∏
        if self.path.startswith('/api/'):
            self.handle_api_request()
            return
        
        # –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
        super().do_GET()
    
    def do_POST(self):
        """–û–±—Ä–æ–±–∫–∞ POST –∑–∞–ø–∏—Ç—ñ–≤"""
        print(f"[POST] {self.client_address[0]} - {self.path}")
        
        if self.path.startswith('/api/'):
            self.handle_api_request()
            return
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ 404 –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö POST –∑–∞–ø–∏—Ç—ñ–≤
        self.send_error(404, "Not Found")
    
    def handle_api_request(self):
        """–û–±—Ä–æ–±–∫–∞ API –∑–∞–ø–∏—Ç—ñ–≤"""
        if self.path == '/api/health':
            self.send_health_response()
        elif self.path == '/api/generate-story':
            self.send_story_response()
        elif self.path == '/api/generate-image':
            self.send_image_response()
        else:
            self.send_error(404, "API endpoint not found")
    
    def send_health_response(self):
        """–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ health check"""
        self.send_response(200)
        self.send_header('Content-Type', 'application/json')
        self.end_headers()
        
        response = {
            'status': 'ok',
            'service': 'StoryFlow',
            'version': '1.0.0'
        }
        self.wfile.write(str(response).encode())
    
    def send_story_response(self):
        """–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–ø–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—ó"""
        self.send_response(200)
        self.send_header('Content-Type', 'application/json')
        self.end_headers()
        
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
        response = {
            'success': True,
            'story': {
                'title': '–¢–µ—Å—Ç–æ–≤–∞ —ñ—Å—Ç–æ—Ä—ñ—è',
                'pages': [
                    '–¶–µ –ø–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó.',
                    '–¶–µ –¥—Ä—É–≥–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó.',
                    '–¶–µ —Ç—Ä–µ—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó.'
                ]
            }
        }
        self.wfile.write(str(response).encode())
    
    def send_image_response(self):
        """–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–ø–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        self.send_response(200)
        self.send_header('Content-Type', 'application/json')
        self.end_headers()
        
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        response = {
            'success': True,
            'image_url': 'https://picsum.photos/800/400?random=1'
        }
        self.wfile.write(str(response).encode())

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    port = 8000
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    if len(sys.argv) > 1:
        try:
            port = int(sys.argv[1])
        except ValueError:
            print("–ü–æ–º–∏–ª–∫–∞: –ø–æ—Ä—Ç –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º")
            sys.exit(1)
    
    # –ó–º—ñ–Ω–∞ —Ä–æ–±–æ—á–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –Ω–∞ –ø–∞–ø–∫—É –∑ —Ñ–∞–π–ª–∞–º–∏
    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞
    with socketserver.TCPServer(("", port), CORSRequestHandler) as httpd:
        print(f"üöÄ StoryFlow —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ http://localhost:{port}")
        print(f"üìÅ –†–æ–±–æ—á–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: {script_dir}")
        print("üõë –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
        print("-" * 50)
        
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüõë –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ")
            httpd.shutdown()

if __name__ == "__main__":
    main()
